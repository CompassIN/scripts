/*-----------------------------------------------------------------------------
    Name: flow
    Generated By: cavisson
    Date of generation: 02/12/2019 05:02:55
    Flow details:
    Build details: 4.1.11 (build# 51)
    Modification History:
-----------------------------------------------------------------------------*/

package com.cavisson.scripts.GCP_DBSpanner_MacysMST;
import java.io.BufferedReader;
import java.io.FileReader;

import pacJnvmApi.NSApi;

public class flow implements NsFlow
{
    private static final int NS_AUTO_STATUS = -1;
    private final int MAX_EXEC_COUNT = 100;
    private int currCount = 0;
    NSSpannerEngine nSSpannerEngine = null;
    
	public int execute(NSApi nsApi) throws Exception
    {
		++currCount;
		System.out.println("Current count of script execution " + currCount);
        int status = 0;
		
		nsApi.ns_advance_param("SQLQuery");
        //String query = nsApi.ns_eval_string("{SQLQuery}");
		 BufferedReader bf = new BufferedReader(new FileReader("/home/cavisson/CD_automation/scripts/default/default/GCP_DBSpanner_MacysMST/SQLQuery.seq")); 
		 BufferedReader bffields = new BufferedReader(new FileReader("/home/cavisson/CD_automation/scripts/default/default/GCP_DBSpanner_MacysMST/SQLFields.seq")); 
		 String selectFields = bffields.readLine();
		 String tableName = bffields.readLine();
		 String whereFields = bffields.readLine();
		 
			/*String baseQuery = "SELECT " +  selectFields +
					" FROM " + tableName +  " where " +
					whereFields + "=";*/
			String baseQuery = "SELECT NameJson FROM Customer@{FORCE_INDEX=CustomerFirstName} AS FN  where FN.FirstName = ";
			
	       String strCurrentLine;
			while((strCurrentLine = bf.readLine()) != null)
	        {
	        //	query = "SELECT NameJson FROM Customer@{FORCE_INDEX=CustomerFirstName} AS FN  where FN.FirstName =\"FN11";
	        	  
	        	//String numberAsString = bf.readLine();
	           String query = baseQuery + "\""+ strCurrentLine + "\"";
        
		System.out.println(" ### query to execute = " + query);
        
    
        String queryType = "";
        if(query.startsWith("INSERT"))
            queryType = "insertQuery";
        else if(query.startsWith("SELECT"))
        	//queryType = "selectQuery";
        	queryType = "selectQueryForObject"; // changed to return DTO instead of JSON
        else if(query.startsWith("UPDATE"))
        	queryType = "updateQuery";
        else if(query.startsWith("DELETE"))
        	queryType = "deleteQuery";

        String InstanceName = nsApi.ns_eval_string("{InstanceName}");
        String DBName = nsApi.ns_eval_string("{DBName}");
        String ProjectID = nsApi.ns_eval_string("{ProjectID}");
		
		
		System.out.println(queryType + " ## " + InstanceName+ " ## " +DBName+ " ## " +ProjectID);	
         if(null == this.nSSpannerEngine)
         {
        	 currCount = 1;
        	 this.nSSpannerEngine = new NSSpannerEngine();	
        	 status = nsApi.ns_start_transaction("SpannerConnect");
        	 this.nSSpannerEngine.intiateDBClient(new String[]{queryType, InstanceName, DBName, ProjectID});
        	 status = nsApi.ns_end_transaction("SpannerConnect", NS_AUTO_STATUS);
         }
		
		
		status = nsApi.ns_start_transaction("TotalSizeBeforeConversion");
		this.nSSpannerEngine.spanner_jsonSize();
		status = nsApi.ns_end_transaction("TotalSizeBeforeConversion", NS_AUTO_STATUS);
		
		status = nsApi.ns_start_transaction("TotalExecuteStmt");
		String Output = nSSpannerEngine.spanner_ns_db_operations(query, new String[]{queryType, InstanceName, DBName, ProjectID});
		status = nsApi.ns_end_transaction("TotalExecuteStmt", NS_AUTO_STATUS);
		
		status = nsApi.ns_start_transaction("TotalConvertStmt");
		nSSpannerEngine.spanner_jsonToJavaObj();
		status = nsApi.ns_end_transaction("TotalConvertStmt", NS_AUTO_STATUS);
		
		status = nsApi.ns_start_transaction("TotalSizeAfterConversion");
		nSSpannerEngine.spanner_jsonSize();
		status = nsApi.ns_end_transaction("TotalSizeAfterConversion", NS_AUTO_STATUS);
		
		
		
		if(currCount == MAX_EXEC_COUNT)
		{
			status = nsApi.ns_start_transaction("SpannerCloseConnection");
			nSSpannerEngine.closeConnection();
			status = nsApi.ns_end_transaction("SpannerCloseConnection", NS_AUTO_STATUS);
			this.nSSpannerEngine = null;
		}
		
		  
        System.out.println("****" + Output + "\n****\n");      
        }    
		return status;
    }
}

